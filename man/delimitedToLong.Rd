% Generated by roxygen2 (4.0.2): do not edit by hand
\name{delimitedToLong}
\alias{delimitedToLong}
\title{delimitedToLong()}
\usage{
delimitedToLong(data, longThis, byThis, delimiter = ", ", filter = NULL,
  returnDT = NULL, keepCols = NULL, allCols = FALSE,
  longThisClass = NULL, ...)
}
\arguments{
\item{data}{a \code{data.frame} or \code{data.table}}

\item{longThis}{the column that you want to become a delimited field}

\item{byThis}{the Id column which seperates different delimited sections}

\item{delimiter}{which delimiter do you want to use? Default is ", "}

\item{filter}{a data.table \code{i} expression (roughly equivalent to dplyr's
filter function) to filter the data before creating delimited fields}

\item{returnDT}{NULL by default, can set to TRUE or FALSE to explicitly
return a data.table. By default, a data.table is returned if table is a
data.table, and a data.frame is returned if table is a data.frame.}

\item{keepCols}{a vector of column names from \code{data} to keep in the
final table. Keep in mind that only the first column corresponding with
each \code{byThis} will be kept. Using \code{keepCols} is really only useful
when the columns you are interested in have identical rows for each unique
value of \code{byThis}.}

\item{allCols}{FALSE by default, if TRUE, sets keepCols to every column
except for the toThis and byThis columns}

\item{longThisClass}{optional, the class that you want the column of longThis
to be in your final data. All delimited fields are going to be character
vectors, as they include character delimiters, so the resulting longThis
column is going to be of the class character. You may specify a different
class here, ex. factor or numeric.}

\item{...}{additional arguments to the \code{data.table::merge} function if
you are either specifying keepCols, or setting allCols to be TRUE. By default,
no arguments are given to \code{data.table::merge} except for \code{x},
\code{y}, and \code{by}.}
}
\description{
Turns delimited data into long form data.
}
\details{
Ex., imagine you have a table with 2 columns, the first is an Id column
with "A" repeated 3 times, the second  column has rows X then Y then Z.
This function would turn this table from having three rows into having one
row where X, Y, Z are delimited by some delimiter (the default is ", "
like the above example).
}
\keyword{create,}
\keyword{delimited}
\keyword{long,}
\keyword{table,}

